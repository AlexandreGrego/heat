heat_template_version: 2013-05-23

description: |
  A simple Heat template that spins up a 3 Tier App with 1 Web Server, 1 App Server, 
  and 1 DB Server on private networks and attaches them to security groups (HOT template in YAML).

parameters:
  external_network_id:
    type: string
    label: ext-net
    description: UUID of the External network
    default: fdb92e61-75e4-47ef-9b74-557af5b6147d
  web_net:
    type: string
    label: web-net
    description: UUID of the Web network
    default: fdb92e61-75e4-47ef-9b74-557af5b6147d

  app_net:
    type: string
    label: app-net
    description: UUID of the App network
    default: fdb92e61-75e4-47ef-9b74-557af5b6147d

  db_net:
    type: string
    label: db-net
    description: UUID of the DB network
    default: fdb92e61-75e4-47ef-9b74-557af5b6147d

  web_image:
    type: string
    description: Name of image to use for servers
    default: ubuntu-14.04-server-amd64

  app_image:
    type: string
    description: Name of image to use for servers
    default: ubuntu-14.04-server-amd64

  db_image:
    type: string
    description: Name of image to use for servers
    default: ubuntu-14.04-server-amd64


resources:
  # Create ports on web switch.
  web-svr-01_port0:
    type: OS::Neutron::Port
    properties:
      admin_state_up: true
      network_id: { get_param: web_net }
  web-svr-01_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: {get_param: external_network_id}
      port_id: { get_resource: web-svr-01_port0 }

  # Create port(s) on app switch.
  app-svr-01_port0:
    type: OS::Neutron::Port
    properties:
      admin_state_up: true
      network_id: { get_param: app_net }

  # Create port(s) on db switch.
  db-svr-01_port0:
    type: OS::Neutron::Port
    properties:
      admin_state_up: true
      network_id: { get_param: db_net }

  # Provision instances.
  db-svr-01:
    type: OS::Nova::Server
    properties:
      name: db-instance-01
      image: { get_param: db_image }
      flavor: m1.small
      networks:
        - port: { get_resource: db-svr-01_port0 }

  app-svr-01:
    type: OS::Nova::Server
    depends_on: db-svr-01
    properties:
      name: app-instance-01
      image: { get_param: app_image }
      flavor: m1.small
      networks:
        - port: { get_resource: app-svr-01_port0 }
      user_data:
        str_replace:
          params:
            __db_ipaddr__: { get_attr: [db-svr-01, first_address] }
          template: |
            #!/bin/bash
            sed -i 's/##HOT_DB_SERVER##/__db_ipaddr__/' /var/www/cgi-bin/nsx-webapp.cgi

  web-svr-01:
    type: OS::Nova::Server
    depends_on: app-svr-01
    properties:
      name: web-instance-01
      image: { get_param: web_image }
      flavor: m1.small
      networks:
        - port: { get_resource: web-svr-01_port0 }
      user_data:
        str_replace:
          params:
            __app_ipaddr__: { get_attr: [ app-svr-01, first_address ] }
          template: |
            #!/bin/bash
            sed -i 's/##HOT_APP_SERVER##/__app_ipaddr__/g' /etc/apache2/sites-enabled/000-default.conf
            service apache2 restart

outputs:
  web-svr-01_private_ip:
    description: IP address of web-svr-01 in private network
    value: { get_attr: [ web-svr-01, first_address ] }
  web-svr-01_public_ip:
    description: Floating IP address of web-svr-01 in public network
    value: { get_attr: [ web-svr-01_floating_ip, floating_ip_address ] }

